#include"main.h"
#include"stdio.h"
#include"string.h"
#define GPIOB_BASE_ADDR 0x40020400
#define I2C_BASE_ADDR 	0x40005400
uint32_t* GPIOB_MODER = (uint32_t*)(GPIOB_BASE_ADDR+0x00);
uint32_t* GPIOB_AFRL  = (uint32_t*)(GPIOB_BASE_ADDR+0x20);
uint32_t* GPIOB_AFRH  = (uint32_t*)(GPIOB_BASE_ADDR+0x24);
uint32_t* I2C_CR1     = (uint32_t*)(I2C_BASE_ADDR+0x00);
uint32_t* I2C_CR2     = (uint32_t*)(I2C_BASE_ADDR+0x04);
uint32_t* I2C_CCR     = (uint32_t*)(I2C_BASE_ADDR+0x1C);
uint32_t* I2C_SR1     = (uint32_t*)(I2C_BASE_ADDR+0x14);
uint32_t* I2C_SR2     = (uint32_t*)(I2C_BASE_ADDR+0x18);
uint32_t* I2C_DR      = (uint32_t*)(I2C_BASE_ADDR+0x10);

void I2C_Init()
{
	__HAL_RCC_GPIOB_CLK_ENABLE();

	*GPIOB_MODER &=~(0b11<<12);
	*GPIOB_MODER |= (0b10<<12);

	*GPIOB_MODER &=~(0b11<<18);
	*GPIOB_MODER |= (0b10<<18);

	*GPIOB_AFRL  &=~(0b1111<24);
	*GPIOB_AFRL  |= (0b0100<24);

	*GPIOB_AFRH  &=~(0b1111<4);
	*GPIOB_AFRH  |= (0b0100<4);

	__HAL_RCC_I2C1_CLK_ENABLE();

	*I2C_CR2     &=~(0b111111<<0);
	*I2C_CR2     |= (16<<0);			//16mHZ

	*I2C_CCR 	 &=~(0xfFf<<0);
	*I2C_CCR	 |=(160<<0);			//16MHZ/160=100KHZ

	*I2C_CR1 	 |=(1<<0);		//enable I2C1
}
void I2C_Write(uint8_t Slave_Reg_Addr, uint8_t Slave_Reg_Value)
{
	//Genarate StartBit
	*I2C_CR1 |= (1<<8);
	//wait Startbit SR1
	while (((*I2C_SR1>>0)&1)==0);
	//Send 7bit Slaveaddress + 1 bit write
	*I2C_DR = 0b00110010;
	while (((*I2C_SR1>>1)&1)==0);
	uint32_t temp = *I2C_SR2;
	//chekc ack
	while(((*I2C_SR1>>10)&1)==1);
	// set command frame (0x1F)
	*I2C_DR = Slave_Reg_Addr;

	while(((*I2C_SR1>>2)&1)==0);
	//check ack
	while(((*I2C_SR1>>10)&1)==1);
	//sent write data
	*I2C_Data = 0b00110010;
	while(((*I2C_SR1>>2)&1)==0);
	//gererate stopbit
	*I2C_CR1 |= (1<<9);

}


void I2C_Read(uint8_t Slave_Reg_Addr)
{
	//Genarate StartBit
	*I2C_CR1 |= (1<<8);
	while (((*I2C_SR1>>0)&1)==0);
	//send 7 bit slave address + 1 bit write
	*I2C_DR = 0b00110010;
	while (((*I2C_SR1>>1)&1)==0);
	uint32_t temp = *I2C_SR2;
	//chekc ack
	while(((*I2C_SR1>>10)&1)==1);
	//send command frame
	*I2C_Data = Slave_Reg_Addr;
	while(((*I2C_SR1>>2)&1)==0);
	//chekc ack
	while(((*I2C_SR1>>10)&1)==1);
	//generate start bit
	*I2C_CR1 |= (1<<8);
	while (((*I2C_SR1>>0)&1)==0);
	//send 7 bit slaveaddress+ 1 bit read
	*I2C_DR = 0b00110011;
	while (((*I2C_SR1>>1)&1)==0);
	temp = *I2C_SR2;
	//check ack
	while(((*I2C_SR1>>10)&1)==1);
	//read data
	while(((*I2C_SR1>>6)&1)==0);
	uint8_t data = *I2C_DR;

	// generate stopbit
	*I2C_CR1 |= (1<<9);
	return data;

}

int main()
{

}



